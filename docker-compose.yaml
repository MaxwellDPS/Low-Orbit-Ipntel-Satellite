version: '3.8'

services:
  nginx:
    restart: always
    build: nginx/
    networks:
      - lois
    ports:
      - 8080:80
      - 8443:443
    depends_on:
      - low_orbit_intel_satellite-wsgi
    volumes:
      - static:/code/static

  low_orbit_intel_satellite-wsgi:
    user: low_orbit_intel_satellite
    restart: always
    build: . 
    command: "bash -c 'sleep 5; python ./manage.py showmigrations; python manage.py migrate; python manage.py createsuperuser --noinput; python manage.py collectstatic --no-input; python manage.py create_geo_admin_group; gunicorn -c low_orbit_intel_satellite/gunicorn.conf.py'"
    networks:
      - lois
    environment:
      DEBUG: "${DEBUG}"
      FORCE_SECURE: "${FORCE_SECURE}"
      SECRET_KEY: "${SECRET_KEY}"
      SQL_DATABASE: "${SQL_DATABASE}"
      SQL_USER: "${SQL_USER}"
      SQL_PASSWORD: "${SQL_PASSWORD}"
      CORS_ALLOWED_HOSTS: "${CORS_ALLOWED_HOSTS}"
      SQL_HOST: database
      TZ: "${TZ}"
      MAX_MIND_KEY: ${MAX_MIND_KEY}
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/"
      DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
      DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME}"
      DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL}"
    volumes:
      - geofiles:/opt/low_orbit_intel_satellite/geofiles
      - static:/opt/low_orbit_intel_satellite/static
    depends_on:
      - database
      - rabbitmq

  low_orbit_intel_satellite-worker:
    user: low_orbit_intel_satellite
    restart: always
    build: . 
    command: celery -A low_orbit_intel_satellite worker -l info --pool=gevent --concurrency 100
    networks:
      - lois
    environment:
      DEBUG: "${DEBUG}"
      FORCE_SECURE: "${FORCE_SECURE}" 
      SECRET_KEY: "${SECRET_KEY}"
      SQL_DATABASE: "${SQL_DATABASE}"
      SQL_USER: "${SQL_USER}"
      SQL_PASSWORD: "${SQL_PASSWORD}"
      MAX_MIND_KEY: ${MAX_MIND_KEY}
      SQL_HOST: database
      TZ: "${TZ}"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/"
    volumes:
      - geofiles:/opt/low_orbit_intel_satellite/geofiles
    depends_on:
      - database
      - rabbitmq
      - low_orbit_intel_satellite-wsgi

  low_orbit_intel_satellite-beat:
    user: low_orbit_intel_satellite
    restart: always
    build: . 
    command: celery -A low_orbit_intel_satellite beat -l info
    networks:
      - lois
    environment:
      DEBUG: "${DEBUG}"
      FORCE_SECURE: "${FORCE_SECURE}" 
      SECRET_KEY: "${SECRET_KEY}"
      SQL_DATABASE: "${SQL_DATABASE}"
      SQL_USER: "${SQL_USER}"
      MAX_MIND_KEY: ${MAX_MIND_KEY}
      SQL_PASSWORD: "${SQL_PASSWORD}"
      SQL_HOST: database
      TZ: "${TZ}"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/"
    depends_on:
      - database
      - rabbitmq
      - low_orbit_intel_satellite-wsgi

  database:
    image: postgres:latest
    restart: always
    networks:
      - lois
    environment:
      POSTGRES_PASSWORD: "${SQL_PASSWORD}"
      POSTGRES_USER: "${SQL_USER}"
      POSTGRES_DB: "${SQL_DATABASE}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - database:/var/lib/postgresql/data

  rabbitmq:
    image: 'rabbitmq:management'
    networks:
      - lois
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        
volumes:
  static: 
  database: 
  geofiles: 

networks:
  lois: